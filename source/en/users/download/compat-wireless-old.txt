


===== compat-wireless-old =====

We started providing compatibility support since 2.6.22 as that is when [[en/developers/Documentation/mac80211|mac80211]] was introduced onto the stock kernel but we have now added initial support for older kernels, starting at 2.6.21. 


===== Requirements =====

You will need at least of these kernels: 
  * 2.6.21 (non-PCI support, PCI was never tested) 
  * 2.6.22 
  * 2.6.23 
  * 2.6.24 
  * 2.6.25 
  * 2.6.26 If you want to have support for WMM or 802.11n then you will need enabled in your kernel: 
    * CONFIG_NETDEVICES_MULTIQUEUE 
    * CONFIG_NET_SCHED If you **do not** have these enabled you will not get WMM or 802.11n support. Note that if you are on a kernel between 2.6.23..2.6.26 you should **not** have CONFIG_MAC80211_QOS enabled as part of your kernel as this was not part of your kernel, it was removed on 2.6.23 because the new CONFIG_NET_SCHED and CONFIG_NETDEVICES_MULTIQUEUE handled it for us. 

Additionally, the kernel you're building for needs a valid ".config" file, if it isn't present compat will assume you have PCI, USB and PCMCIA built into your kernel and if not, fail building. 


===== Release notes =====

Later kernels got WMM supported redesigned for mac80211, when using compat-wireless old we will build our own WMM support for you without usage of the new kernel QOS features. This is exactly how WMM was handled in mac80211 on 2.6.22, but keep in mind 2.6.22 didn't come with any mac80211 drivers, it came just with mac80211 itself. Since you get a custom WMM support you also get 802.11n support, which requires WMM support. 

Its worth noting compat-wireless-old currently does not get any attention from any developer as such its not getting further updates. Patches are always welcomed though. 


===== Where to download =====

You can get compat-wireless-old from: 

[[http://wireless.kernel.org/download/compat-wireless-2.6/|http://wireless.kernel.org/download/compat-wireless-2.6/]] 


===== Building and installing =====

**Extract**: 

Extract the content of the package: 


<code>tar jxvf compat-wireless-old.tar.bz2</code>
**Build**: 

Build the latest Linux wireless subsystem: 


<code>cd compat-wireless-old.tar.bz2
make</code>
**Install**: 

We use the updates/ directory so your distribution's drivers are left intact. 


<code>sudo make install</code>
**Uninstall**: 

This nukes our changes to updates/ so you can go back to using your distribution's supported drivers. 


<code>sudo make uninstall</code>
**Unload**: 

Since you might be replacing your old mac80211 drivers you should first try to unload all existing mac80211 and related drivers. Note also that broadcom, zydas, and atheros devices have old legacy drivers which you need to be sure are removed first. We provide a mechanism to unload all old and legacy drivers first so you should run to be sure: 


<code>sudo make unload</code>
**Load**: 

Before loading modules you must first unload your old wireless subsystem modules. Read above how to do this. If you know what module you need you can simply load the module using modprobe. If you simply are not sure you can use, just reboot the box. 


===== Drivers =====

Here is the list of all the drivers we support in this package. 
|[[en/users/Drivers|Drivers]] |
|[[en/users/Drivers/adm8211|adm8211]] |
|[[en/users/Drivers/at76_usb|at76_usb]] |
|[[en/users/Drivers/ath9k|ath9k]] |
|[[en/users/Drivers/ath5k|ath5k]] |
|[[en/users/Drivers/b43|b43]] |
|[[en/users/Drivers/b43|b43legacy]] |
|[[en/users/Drivers/iwl3945|iwl3945]] |
|[[en/users/Drivers/iwl4965|iwlagn]] |
|[[en/users/Drivers/ipw2100|ipw2100]] |
|[[en/users/Drivers/ipw2200|ipw2200]] |
|[[en/users/Drivers/libertas|ub8xxx]] |
|[[en/users/Drivers/libertas|libertas_cs]] |
|[[en/users/Drivers/p54|p54_pci]] |
|[[en/users/Drivers/p54|p54_usb]] |
|[[en/users/Drivers/rndis_wlan|rndis_wlan]] |
|[[en/users/Drivers/rt2400pci|rt2400pci]] |
|[[en/users/Drivers/rt2400pci|rt2400pci]] |
|[[en/users/Drivers/rt2500pci|rt2500pci]] |
|[[en/users/Drivers/rt2500usb|rt2500usb]] |
|[[en/users/Drivers/rt61pci|rt61pci]] |
|[[en/users/Drivers/rt73usb|rt73usb]] |
|[[en/users/Drivers/rtl8180|rtl8180]] |
|[[en/users/Drivers/rtl8187|rtl8187]] |
|[[en/users/Drivers/zd1211rw|zd1211rw]] |


===== Known issues =====
      * ath9k on older kernels ath9k is currently only enabled on kernels >= 2.6.26. If a developer is interested in older kernels they'll have to add compatibility support for it. 
        * Strange wireless device names: Lets clarify device names first. Regularly you should only see two new device names: 
          * wmaster0 
          * wlan0 The //wmaster0// device is what we call [[en/developers/Documentation/mac80211|the master device]]. The master device is an internal master device used only by mac80211. It should be ignored by users. If possible we will try to hide it from users later. 

On distribution releases with old udev rules you may end up with strange network device names, for example, //wlan0_rename//. You may also end up with master device names such as //eth3//, when this was actually intended to be named //wmaster0//. This happens because master interface has the same MAC address as the real interface, and it is created first. The old udev rule, which keys on the MAC addres, may rename it to device names like //eth3//, for example. Then the real interface is created, udev sees that it has already renamed an interface with that MAC and gives it the //wlan0_rename// name. 

If you delete the generated rename rules, it should create the correct ones on the next boot. Alternately, you could add: 


<code>ATTRS{type}="1"</code>
selector to your current rule. Debian puts these autogenerated udev rules in /etc/udev/rules.d/z25_persistent-net.rules. Other distributions may vary slightly. 
            * [[en/developers/Documentation/nl80211|nl80211]]: 

Kernels <= 2.6.22 now get nl80211 support, however, genl_multicast_group won't work. This compatibility cannot be extended to older kernels as the struct genl_family was extended on 2.6.23 to add the struct list_head mcast_groups. Without this you will not be able to use nl80211 events which uses this heavily. The compat-wireless-old release does not have nl80211 events though so you should not care about this. 
              * b43: b43 and b43legacy now load. Since there was an old softmac broadcom driver we provide a load script for this driver. To load the new generation drivers (b43 and b43legacy) you can run: 


<code>sudo b43load b43</code>
To revert back to bcm43xx you can run: 


<code>sudo b43load bcm43xx</code>
                * [[en/users/Drivers/madwifi|MadWifi]]: 

If [[en/users/Drivers/madwifi|MadWifi]] is present the build system will detect this and disable it. It does this by simply renaming ath_pci.ko to ath_pci.ko.ignore. This lets us disable the [[MadWifi|MadWifi]] driver without blacklisting it which could cause issues with users later. If you would like to enable [[MadWifi|MadWifi]] at a later time and disable ath5k you can run: 


<code>sudo athload madwifi</code>
To revert back to [[en/users/Drivers/ath5k|ath5k]] you can run: 


<code>sudo athload ath5k</code>
                  * prism54, p54pci, p54usb? We don't provide prism54 in this package because distributions already provide it. p54 is its replacement. prism54 works only with full MAC cards. p54 works with both full MAC and soft MAC cards. Should prism54 get any new updates we'll start packaging it here. 
                    * Firmware: If your driver needs firmware please be sure to check the driver page for that driver here: 

[[en/users/Drivers|en/users/Drivers]] 


===== Building for external kernels =====

If you have a kernel you do not have installed but yet want to build the compat-wireless-old drivers for it you can use this syntax: 


<code>make KLIB=/home/mcgrof/kernels/linux-2.6.23.9 \
   KLIB_BUILD=/home/mcgrof/kernels/linux-2.6.23.9</code>

===== Bugs =====

If you've found a bug you are expected to fix it as this is not being actively developed. Patches are always welcomed of course. 


<code>linux-wireless@vger.kernel.org</code>

===== How about compatibility work for kernels older than 2.6.21 ? =====

Sure, feel free to send patches. The main work was designed to support kernels >= 2.6.22 as that was when [[en/developers/Documentation/mac80211|mac80211]] was introduced. Some drivers are available for 2.6.21 but not all drivers can work on that kernel due to an CRC-ITU-T algorithm dependency. 


===== ChangeLog =====


==== compat-wireless-old ChangeLog ====

See the [[http://git.kernel.org/?p=linux/kernel/git/mcgrof/compat-wireless-2.6-old.git;a=summary|compat-wireless-old ChangeLog]] to view changes made necessary in order to keep advancing this package. 


===== License =====

This work is a subset of the Linux kernel as such we keep the kernel's Copyright practice. Some files have their own copyright and in those cases the license is mentioned in the file. All additional work made to building this package is licensed under the GPLv2. 


===== Developers =====


==== Hacking on compat-wireless-2.6-old ====

The old compat-wireless tree is used for kernels <= 2.6.26. We don't have an automatic script to update it. It is updated manually, as such if you want it updated please send patches to linux-wireless mailing list and hack on it as you would with the kernel using git on its own tree. 


===== TODO =====
                      * Compatibilty work for 2.6.18 â€“> 2.6.20 

RHEL5, Centos5, and Debian etch seems to be stuck on 2.6.18. Patches are welcomed. 
                        * Dialog (make menuconfig) option for this package 
===== Patches for compatibility work =====

For kernels >= 2.6.27 please send patches against 


<code>git://git.kernel.org/pub/scm/linux/kernel/git/mcgrof/compat-wireless-2.6-old.git</code>
<code>To: Luis R. Rodriguez <mcgrof@winlab.rutgers.edu>
CC: linux-wireless@vger.kernel.org
Subject: [PATCH] compat-wireless-old: fix foo</code>

===== Checking out compat-wireless-2.6-old.git tree =====

To checkout the compat-wireless-2.6.git tree you do: 


<code>git-clone git://git.kernel.org/pub/scm/linux/kernel/git/mcgrof/compat-wireless-2.6-old.git</code>
Note: you do not need a wireless-testing clone to use or hack on this tree. 
