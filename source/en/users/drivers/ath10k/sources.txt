o
Go back --> [[en/users/Drivers/ath10k|ath10k]] 

 
===== ath10k sources =====

//ath10k// development happens in Kalle Valo's ath.git tree on kernel.org: 

https://git.kernel.org/cgit/linux/kernel/git/kvalo/ath.git/

To clone the tree: 

<code>git clone git://git.kernel.org/pub/scm/linux/kernel/git/kvalo/ath.git</code>

ath10k driver is located in directory drivers/net/wireless/ath/ath10k. 

If you just want to browse the source code with your web browser this links always points to latest version of ath10k: 

https://git.kernel.org/cgit/linux/kernel/git/kvalo/ath.git/tree/drivers/net/wireless/ath/ath10k

Periodically Kalle Valo pulls the ath tree into wireless-drivers-next tree. Then David Miller pulls it to net-next which is eventually pulled by Linus Torvalds to official kernel releases. As a rough estimate it takes 2-4 months for a patch to propage from ath.git to an official Linux release.

See also [[en/users/drivers/ath10k/submittingpatches|submitting ath10k patches]].

===== Git branches =====

ath.git contains multiple branches: 

  * master  : The default branch selected when cloning the tree. Everyone working on ath10k (or ath6kl) should use this branch. Follows John Linville's wireless-testing tree and contains the latest -rc release from Linus Torvalds + latest wireless code from John + latest ath10k/ath6kl code from ath-next branch. Usually the branch is rebased after a merge window (after -rc1 is released). Due to unclean history bisect might not work, better to use ath-next for bisecting. 
  * ath-next  : Based on John's wireless-next tree and John will pull from this branch. ath6kl/ath10k patches are commited to this branch first and then merged to the master branch. For bisect runs it's better to use this branch instead of the master branch. 
  * pending  : Used for building and runtime testing patches under review. Is rebased almost daily and hence commit ids are NOT stable. Use this only if you know what you are doing. 
  * master-pending  : The pending branch merged on top of the master, for easier testing of the pending patches. Same rules apply as with the pending branch.