
Glossary 

Terms we use throughout the wiki with which you should become familiar. 

 


===== BSS =====

//BSS// stands for //Basic Service Set//. The coverage of an access point is called a //BSS//. 


===== cfg80211 =====

Kernel side of configuration management for wireless devices. [[en/developers/Documentation/Glossary|nl80211]] is the User-space side of configuration management for wireless devices. 

Works together with [[en/developers/Documentation/Glossary|FullMAC]]-drivers and also with [[en/developers/Documentation/Glossary|mac80211]]-based drivers. 


===== CLI =====

//CLI// stands for //[[wp>Command-line_interface|Command-line interface]]//. These are utilities you can run in the console or terminal emulator. 


===== FullMAC =====

//FullMAC// is a term used to describe a type of wireless card where the [[en/developers/Documentation/Glossary|MLME]] is managed in hardware. You would **not** use [[en/developers/Documentation/Glossary|mac80211]] to write a //FullMAC// wireless driver. 


===== git-describe =====

git-describe is a git command. It outputs something like this: 

//v3.12-11297-g6579946// 

The first part is the //tag// for the current release. The second part is the number of patches which have been applied since the tag was applied. The last part, after the first //g// is the SHA1 commit ID of the last commit applied. 


===== IBSS =====

//IBSS// stands for //Independent Basic Service Set//. Its basically Ad-Hoc mode. See [[wp>Independent_Basic_Service_Set|Independent Basic Service Set]] 


===== Information Element =====

An Information Element (IE) is a part of management frames in the IEEE 802.11 wireless LAN protocol. IEs are a device's way to transfer descriptive information about itself inside management frames. There are usually several IEs inside each such frame, and each is built of [[wp>Type-length-value|Type-length-value]] (TLVs). 

The common structure of an IE is as follows: 


<code>|   1   |    1   |     1-255       |
+-------+--------+-----------------+
| Type  | Length |     Data        |
+-------+--------+-----------------+</code>
Whereas the vendor specific IE looks like this: 


<code>|   1   |    1   |          4        |    1-251   |
+-------+--------+-------------------+------------+
|  221  | Length |        OUI        |     Data   |
+-------+--------+-------------------+------------+</code>

===== iw =====

[[en/users/Documentation/iw|iw]] is a new [[en/developers/Documentation/nl80211|nl80211]] based [[en/developers/Documentation/Glossary|CLI]] configuration utility for wireless devices. 


===== nl80211 =====

User-space side of configuration management for wireless devices. It is a Netlink-based user-space protocol. [[en/developers/Documentation/Glossary|cfg80211]] is Kernel side of configuration management for wireless devices. 

[[en/users/Documentation|Several user-space applications]] are available which utilize //nl80211//. See [[en/developers/Documentation/nl80211|Developer Docs for nl80211]]. 


===== mac80211 =====

A driver API for SoftMAC wireless cards.  See [[en/developers/Documentation/mac80211|Developer Docs for mac80211]]. 

See also [[en/developers/Documentation/Glossary|SoftMAC]]. 


===== MLME =====

//MLME// Stands for //Media Access Control (MAC) Sublayer Management Entity//. MLME is the management entity where the Physical layer (PHY) MAC state machines reside. Examples of states a MLME may assist in reaching: 
  * Authenticate 
  * Deauthenticate 
  * Associate 
  * Disassociate 
  * Reassociate 
  * Beacon 
  * Probe [[en/developers/Documentation/Glossary|mac80211]]'s MLME management implementation is currently handled by <code>net/mac80211/ieee80211_sta.c</code>. This handles only the STA MLME 


===== PHY =====

physical-layer controller 


===== SME =====

Station Management Entity, often prepended with //AP// (Access Point)


===== SoftMAC =====

//SoftMAC// is a term used to describe a type of WNIC where the [[en/developers/Documentation/Glossary|MLME]] is expected to be managed in software. [[en/developers/Documentation/Glossary|mac80211]] is a driver API for SoftMAC WNIC, for example. 


===== SSID =====

//SSID// stands for //Service Set IDentifier//. The SSID is a code attached to all packets on a wireless network to identify each packet as part of that network. The code consists of a string of 1-32 octets (usually represented as case sensitive alphanumeric characters). 

See also [[wp>Service_set_(802.11_network)|SSID]] 


===== Station (STA) =====

//Station// (or //STA//) is the generic term for a device with a radio that can communicate with other //stations// in a wireless network.  Common forms of a //station// are access points (AP), computers, or phones. 

See also [[wp>Station_(networking)|Station_(networking)]] or [[wp>Wireless_access_point|Wireless access point]]. 


===== WE =====

//WE// stands for [[en/developers/Documentation/Wireless-Extensions|Wireless-Extensions]] - the old driver API and user <--> kernel communication transport. Obsoleted by [[en/developers/Documentation/Glossary|#cfg80211]] 


===== WEXT =====

//WEXT// stands for [[en/developers/Documentation/Wireless-Extensions|Wireless-Extensions]] - the old driver API and user <--> kernel communication transport. Obsoleted by [[en/developers/Documentation/Glossary|#cfg80211]] 


===== WIPHY =====

Wireless [[en/developers/Documentation/Glossary|PHY]]. 
